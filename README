#################################
hospital: healthchecks for Python
#################################

``hospital`` makes it easy to setup and use health checks in Python.

Health checks are kind of tests applied to running applications and services.

**********
Quickstart
**********

Write health checks
===================

During development, write health checks...

Inherit from :py:class:`hospital.HealthCheck` and write health checks as you
would write tests, i.e. using assertions:

.. doctest::

   from hospital import HealthCheck

   class HelloWorldHealthCheck(HealthCheck):
       """A fake health check that always passes."""
       def test_hello_world(self):
           """'Hello world' is a string (always passes)."""
           self.assertTrue(isinstance('Hello world', basestring))

.. note::

   :py:class:`hospital.HealthCheck` from :py:class:`unittest.TestCase`.

Or customize some builtins:

.. doctest::

   from hospital.networking import PingHealthCheck

   class LocalNetworkHealthCheck(PingHealthCheck):
       """Make sure Python can use local network."""
       host = 'localhost'

Run health checks
=================

After a deployment, run health checks to make sure everything went fine.

With nose (here we run health checks of hospital project):

.. code-block:: sh

   nosetests --no-path-adjustment --all-modules --attr="is_healthcheck"  hospital

.. note::

   Some third-party projects expose health checks on HTTP service, returning
   an HTTP 200 in case of success, or an HTTP 500 in case of any failure.
   See :doc:`about/alternatives`.


Plug in supervision, monitoring
===============================

Include health checks in supervision/monitoring tools.

Diagnose
========

In case of incidents, use health checks to diagnose problems.


*********
Resources
*********

* Documentation: https://hospital.readthedocs.org
* IRC: ``#python-hospital`` on freenode
* PyPI page: https://pypi.python.org/pypi/hospital
* Code repository: https://github.com/python-hospital/hospital
* Bugtracker: https://github.com/python-hospital/hospital/issues
* Continuous integration: https://travis-ci.org/python-hospital/hospital
